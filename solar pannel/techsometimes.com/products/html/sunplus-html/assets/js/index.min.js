/*
Theme Name: SunPlus HTML5 Template
Theme URI: 
Design by: 
Developed by: Flash Coder Studio
Version: 1.0
License: 
Tags: 
*/

(() => {
  {
    let e = document.querySelector(".menu-bar .main-menu ul").innerHTML,
      t =
        (document
          .querySelector(".menu-bar .menu-bar-content")
          .appendChild(
            Object.assign(document.createElement("div"), {
              className: "mobile-menu-overlay",
            })
          ),
        (e) =>
          document
            .querySelector(".menu-bar .search-popup")
            .classList[e]("active")),
      n =
        (document
          .querySelector(".menu-bar .search-option-open")
          .addEventListener("click", () => t("add")),
        document
          .querySelector(".menu-bar .search-close")
          .addEventListener("click", () => t("remove")),
        (t) =>
          document
            .querySelectorAll(
              ".mobile-menu-bar, .mobile-menu-btn, .mobile-menu-overlay"
            )
            .forEach((e) => e.classList.toggle("active", t))),
      a =
        (document
          .querySelector(".menu-bar .mobile-menu-btn")
          .addEventListener("click", () => n(!0)),
        document
          .querySelectorAll(
            ".menu-bar .close-mobile-btn, .menu-bar .mobile-menu-overlay"
          )
          .forEach((e) => e.addEventListener("click", () => n(!1))),
        document.querySelector(
          ".menu-bar .mobile-menu-bar .mobile-menu-header"
        )),
      r = document.createElement("nav"),
      i = ((r.className = "mobile-main-manu"), document.createElement("ul")),
      s =
        ((i.innerHTML = e),
        r.appendChild(i),
        a.insertAdjacentElement("afterend", r),
        (e, t) => {
          var n = e.offsetHeight;
          (e.style.height = n + "px"),
            (e.style.overflow = "hidden"),
            anime({
              targets: e,
              height: [n, 0],
              duration: t,
              easing: "easeInOutQuad",
              complete: () => {
                (e.style.display = "none"),
                  (e.style.height = ""),
                  (e.style.overflow = "");
              },
            });
        }),
      o = (e) => {
        e.querySelectorAll(".arrow-rotate-anime").forEach((e) => {
          e.classList.remove("arrow-rotate-anime");
          e = e.querySelector("ul");
          e && "none" !== window.getComputedStyle(e).display && s(e, 300);
        });
      };
    document
      .querySelectorAll(".menu-bar .mobile-main-manu li > a")
      .forEach((e) => {
        e.addEventListener("click", function (e) {
          var t,
            n = this.parentElement,
            a = n.querySelector("ul"),
            r = n.classList.contains("arrow-rotate-anime");
          n.classList[0] &&
            (e.preventDefault(),
            r
              ? (n.classList.remove("arrow-rotate-anime"), a && s(a, 300))
              : (o(n.parentElement),
                n.classList.add("arrow-rotate-anime"),
                a &&
                  ((e = 300),
                  ((t = a).style.display = "block"),
                  (r = t.scrollHeight),
                  (t.style.height = "0px"),
                  (t.style.overflow = "hidden"),
                  anime({
                    targets: t,
                    height: [0, r],
                    duration: e,
                    easing: "easeInOutQuad",
                    complete: () => {
                      (t.style.height = ""), (t.style.overflow = "");
                    },
                  }))));
        });
      }),
      window.addEventListener("scroll", () => {
        var e = document.querySelector(".top-bar"),
          t = document.querySelector(".menu-bar"),
          e = e ? window.scrollY > e.offsetHeight : 0 < window.scrollY;
        t.classList.toggle("sticky-header", e),
          (document.querySelector("main").style.marginTop = e
            ? t.offsetHeight + "px"
            : null);
      });
  }
  document.querySelectorAll("[data-background]").forEach((e) => {
    e.style.backgroundImage = `url(${e.getAttribute("data-background")})`;
  }),
    new VenoBox(),
    new Swiper(".banner.v1 .slider", {
      slidesPerView: 1,
      spaceBetween: 0,
      loop: !0,
      speed: 1e3,
      keyboard: !0,
      simulateTouch: !1,
      autoplay: { delay: 4e3, disableOnInteraction: !1 },
      navigation: {
        nextEl: ".banner.v1 .next-btn",
        prevEl: ".banner.v1 .prev-btn",
      },
    }),
    new Swiper(".banner.v2 .slider", {
      slidesPerView: 1,
      spaceBetween: 0,
      loop: !0,
      speed: 1e3,
      keyboard: !0,
      simulateTouch: !1,
      autoplay: { delay: 4e3, disableOnInteraction: !1 },
      pagination: { el: ".banner.v2 .banner-pagination", clickable: !0 },
      on: {
        init: function () {
          $(".slide_progress-bar").removeClass("animate"),
            $(".slide_progress-bar").eq(0).addClass("animate");
        },
        slideChangeTransitionStart: function () {
          $(".slide_progress-bar").removeClass("animate");
        },
        slideChangeTransitionEnd: function () {
          $(".slide_progress-bar").eq(0).addClass("animate");
        },
      },
    }),
    new Swiper(".banner.v3 .slider", {
      slidesPerView: 1,
      spaceBetween: 0,
      loop: !0,
      speed: 1e3,
      autoplay: { delay: 4e3, disableOnInteraction: !1 },
      navigation: {
        nextEl: ".banner.v3 .next-btn",
        prevEl: ".banner.v3 .prev-btn",
      },
    });
  {
    let e = document.querySelectorAll(".counter"),
      r = (t) => {
        var n = t.match(/^([0-9,.-]+)([a-zA-Z$â‚¬#%+]+)?$/);
        if (n)
          return {
            numericValue: parseFloat(n[1].replace(/[,.-]/g, "")),
            suffix: n[2] || "",
          };
        if (/^[0-9,]+(\.\d+)?$/.test(t))
          return t.includes(",")
            ? { numericValue: parseFloat(t.replace(/,/g, "")), suffix: "" }
            : { numericValue: parseFloat(t), suffix: "" };
        if (/^\d{1,2}:\d{2}(:\d{2})?$/.test(t)) {
          n = t.split(":");
          let e = 0;
          return (
            3 === n.length
              ? (e =
                  3600 * parseInt(n[0], 10) +
                  60 * parseInt(n[1], 10) +
                  parseInt(n[2], 10))
              : 2 === n.length &&
                (e = 60 * parseInt(n[0], 10) + parseInt(n[1], 10)),
            { numericValue: e, suffix: "" }
          );
        }
        return { numericValue: parseFloat(t), suffix: "" };
      },
      t = (s) => {
        if (!s.dataset.animated) {
          let i = s.textContent.trim();
          var e = s.dataset.countMin
              ? r(s.dataset.countMin)
              : { numericValue: 0, suffix: "" },
            t = r(s.dataset.countMax),
            n = s.dataset.countDuration || 1e3,
            a = s.dataset.countDelay || 500;
          anime({
            targets: s,
            innerHTML: [e.numericValue, t.numericValue],
            round: 1,
            easing: "linear",
            duration: n,
            delay: a,
            update: function (e) {
              var t, n, a, r;
              s.textContent =
                ((t = parseFloat(s.innerHTML)),
                (n = i),
                (r = n.match(/^([0-9,.-]+)([a-zA-Z+]+)$/))
                  ? "" +
                    t.toLocaleString(void 0, {
                      minimumFractionDigits: r[1].includes(".")
                        ? r[1].split(".")[1].length
                        : 0,
                      maximumFractionDigits: r[1].includes(".")
                        ? r[1].split(".")[1].length
                        : 0,
                    }) +
                    r[2]
                  : /^[0-9,]+(\.\d+)?$/.test(n)
                  ? t.toLocaleString(void 0, {
                      minimumFractionDigits: n.includes(".")
                        ? n.split(".")[1].length
                        : 0,
                      maximumFractionDigits: n.includes(".")
                        ? n.split(".")[1].length
                        : 0,
                    })
                  : /^\d{1,2}:\d{2}(:\d{2})?$/.test(n)
                  ? ((r = Math.floor(t / 3600)),
                    (n = Math.floor((t % 3600) / 60)),
                    (a = Math.floor(t % 60)),
                    `${r.toString().padStart(2, "0")}:${n
                      .toString()
                      .padStart(2, "0")}:` + a.toString().padStart(2, "0"))
                  : t);
            },
            complete: function (e) {
              s.textContent = i;
            },
          }),
            (s.dataset.animated = "true");
        }
      },
      n = (e) => {
        e = e.getBoundingClientRect();
        return (
          0 <= e.top &&
          0 <= e.left &&
          e.bottom <=
            (window.innerHeight || document.documentElement.clientHeight) &&
          e.right <= (window.innerWidth || document.documentElement.clientWidth)
        );
      },
      a = () => {
        e.forEach((e) => {
          n(e) && t(e);
        });
      };
    e.forEach((e) => {
      n(e) && t(e);
    }),
      window.addEventListener("scroll", a);
  }
  {
    let e = document.querySelectorAll(".my-progress-bar .progress-vale"),
      t = (e) => {
        e.dataset.animated ||
          (anime({
            targets: e,
            width: [
              e.dataset.progressMinWidth + "%",
              e.dataset.progressMaxWidth + "%",
            ],
            easing: "linear",
            duration: e.dataset.progressDuration || 1e3,
            delay: e.dataset.progressDelay || 500,
          }),
          (e.dataset.animated = "true"));
      };
    function n(e) {
      e = e.getBoundingClientRect();
      return (
        0 <= e.top &&
        0 <= e.left &&
        e.bottom <=
          (window.innerHeight || document.documentElement.clientHeight) &&
        e.right <= (window.innerWidth || document.documentElement.clientWidth)
      );
    }
    var a = () => {
      e.forEach((e) => {
        n(e) && t(e);
      });
    };
    e.forEach((e) => {
      n(e) && t(e);
    }),
      window.addEventListener("scroll", a);
  }
  $("select").each((e, t) => {
    let n = $("<div>").addClass("my-select"),
      a = $("<button>")
        .addClass("current")
        .attr("type", "button")
        .html(t.options[t.selectedIndex].innerHTML),
      r = $("<ul>").addClass("list");
    for (let e of t.options) {
      var i = $("<li>").html(e.innerHTML);
      i.on("click", () => {
        a.html(e.innerHTML), r.removeClass("open"), a.removeClass("open");
      }),
        r.append(i);
    }
    a.on("click", () => {
      r.toggleClass("open"), a.toggleClass("open");
    }),
      n.append(a),
      n.append(r),
      $(t).before(n).hide(),
      $(document).on("click", (e) => {
        n.is(e.target) ||
          0 !== n.has(e.target).length ||
          (r.removeClass("open"), a.removeClass("open"));
      });
  }),
    window.matchMedia("(pointer: fine)").matches &&
      768 <= window.innerWidth &&
      document.querySelectorAll(".shape-move").forEach((o) => {
        o.addEventListener("mousemove", (e) => {
          var {
            left: t,
            top: n,
            width: a,
            height: r,
          } = o.getBoundingClientRect();
          let i = e.clientX - t - a / 2,
            s = e.clientY - n - r / 2;
          o.querySelectorAll(".shape-item").forEach((e) => {
            anime({
              targets: e,
              translateX: 1 - i * (e.getAttribute("data-move") || 0.04),
              translateY: 1 - s * (e.getAttribute("data-move") || 0.04),
              duration: e.getAttribute("data-duration") || 0,
              delay: e.getAttribute("data-delay") || 0,
              easing: "linear",
            });
          });
        }),
          o.addEventListener("mouseleave", () => {
            o.querySelectorAll(".shape-item").forEach((e) => {
              anime({
                targets: e,
                translateX: 0,
                translateY: 0,
                duration: e.getAttribute("data-duration") || 300,
                delay: e.getAttribute("data-delay") || 0,
                easing: "linear",
                complete: () => e.removeAttribute("style"),
              });
            });
          });
      }),
    new Swiper(".our-project.v1 .slider", {
      slidesPerView: 1,
      spaceBetween: 30,
      loop: !0,
      speed: 1e3,
      autoplay: { delay: 1e3, disableOnInteraction: !1, pauseOnMouseEnter: !0 },
      breakpoints: {
        300: { slidesPerView: 1 },
        767: { slidesPerView: 2 },
        992: { slidesPerView: 3 },
        1200: { slidesPerView: 4 },
      },
    }),
    new Swiper(".testimonial.v1 .slider", {
      slidesPerView: 1,
      spaceBetween: 0,
      loop: !0,
      speed: 1e3,
      autoplay: { delay: 1e3, disableOnInteraction: !1, pauseOnMouseEnter: !0 },
      pagination: {
        el: ".testimonial.v1 .testimonial-pagination",
        clickable: !0,
      },
    }),
    new Swiper(".testimonial.v2 .slider", {
      slidesPerView: 1,
      spaceBetween: 30,
      loop: !0,
      speed: 1e3,
      autoplay: { delay: 1e3, disableOnInteraction: !1, pauseOnMouseEnter: !0 },
      pagination: {
        el: ".testimonial.v2 .testimonial-pagination",
        clickable: !0,
      },
      breakpoints: { 300: { slidesPerView: 1 }, 992: { slidesPerView: 2 } },
    }),
    new Swiper(".testimonial.v3 .slider", {
      slidesPerView: 1,
      spaceBetween: 30,
      loop: !0,
      speed: 1e3,
      autoplay: { delay: 1e3, disableOnInteraction: !1, pauseOnMouseEnter: !0 },
    }),
    new Swiper(".our-trusted-partner.v1 .slider", {
      spaceBetween: 30,
      loop: !0,
      speed: 900,
      autoplay: { delay: 500, disableOnInteraction: !1, pauseOnMouseEnter: !0 },
      breakpoints: {
        300: { slidesPerView: 2 },
        575: { slidesPerView: 3 },
        767: { slidesPerView: 4 },
        992: { slidesPerView: 4 },
        1200: { spaceBetween: "11%", slidesPerView: 5 },
        1400: { spaceBetween: "13%", slidesPerView: 5 },
      },
    }),
    new Swiper(".our-trusted-partner.v2 .slider", {
      spaceBetween: 30,
      loop: !0,
      speed: 900,
      autoplay: { delay: 500, disableOnInteraction: !1, pauseOnMouseEnter: !0 },
      breakpoints: {
        300: { slidesPerView: 2 },
        575: { slidesPerView: 3 },
        767: { slidesPerView: 4 },
        992: { slidesPerView: 4 },
        1200: { spaceBetween: "11%", slidesPerView: 5 },
        1400: { spaceBetween: "13%", slidesPerView: 5 },
      },
    });
  {
    let a = document.querySelector(".contact-form"),
      r = document.querySelector(".response");
    function i(e, t, n = "success") {
      e &&
        ((e.textContent = ""),
        (e.className = "response"),
        anime({
          targets: e,
          opacity: [0, 1],
          translateY: [50, 0],
          easing: "easeInOutQuad",
          duration: 400,
          complete: () => {
            (e.textContent = t),
              e.classList.add(n),
              anime({
                targets: e,
                opacity: [1, 0],
                translateY: [0, -50],
                easing: "easeInOutQuad",
                duration: 400,
                delay: "error" === n ? 2e3 : 6e3,
                complete: () => {
                  (e.textContent = ""), (e.className = "response");
                },
              });
          },
        }));
    }
    a &&
      r &&
      a.addEventListener("submit", async function (e) {
        e.preventDefault();
        e = new FormData(a);
        try {
          var t,
            n = ((e) => {
              let t = e.get("name"),
                n = e.get("email"),
                a = e.get("message"),
                r = e.get("subject"),
                i = "",
                s = "success";
              return (
                (t.length < 2 || 50 < t.length) &&
                  ((i += "Name must be between 2 and 50 characters long. "),
                  (s = "warning")),
                ((e) =>
                  /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(e))(
                  n
                ) ||
                  ((i += "Please enter a valid email address. "),
                  (s = "error")),
                (a.length < 10 || 1e3 < a.length) &&
                  ((i +=
                    "Message must be between 10 and 1000 characters long. "),
                  (s = "warning")),
                r ||
                  ((i += "Please select a subject for your message. "),
                  (s = "warning")),
                { isValid: "success" === s, message: i.trim(), type: s }
              );
            })(e);
          "success" === n.type
            ? ((t = await (async (e, t) => {
                if ((e = await fetch(e, { method: "POST", body: t })).ok)
                  return e.text();
                throw new Error("Network response was not ok");
              })(a.action, e)),
              i(r, t, t.includes("sent") ? "success" : "warning"),
              t.includes("sent") &&
                (a.reset(), "undefined" != typeof grecaptcha) &&
                grecaptcha.reset())
            : i(r, n.message, n.type);
        } catch (e) {
          i(
            r,
            "Oops! An error occurred and your message could not be sent.",
            "error"
          );
        }
      });
  }
  new WOW({ animateClass: "animate__animated", offset: 0 }).init();
  {
    let n = document.querySelector(".scroll-bottom-top"),
      a = n.querySelector("path:nth-child(1)"),
      r = a.getTotalLength(),
      i =
        document.querySelector("main .banner, main .breadcum")?.offsetHeight ||
        0;
    (a.style.strokeDasharray = Math.max(0, r) + " " + Math.max(0, r)),
      (a.style.strokeDashoffset = Math.max(0, r)),
      window.addEventListener("scroll", () => {
        var e = window.scrollY,
          t = document.body.scrollHeight - window.innerHeight,
          t = r - (e * r) / t;
        (a.style.strokeDashoffset = Math.max(0, t)),
          n.classList.toggle("show", e > i / 2);
      }),
      n.addEventListener("click", (e) => {
        e.preventDefault(),
          anime({
            targets: "html, body",
            scrollTop: 0,
            duration: 100,
            easing: "easeInOutQuad",
          });
      });
  }
  {
    let e = document.querySelector(".preloder");
    e &&
      (document.addEventListener("DOMContentLoaded", function () {
        e.innerHTML =
          '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 281 436"><path fill-rule="evenodd" clip-rule="evenodd" d="M144.306 435.693H144.331C145.419 435.693 146.308 434.818 146.322 433.726L149.574 172.557C149.588 171.457 148.707 170.555 147.608 170.542H147.582C146.494 170.542 145.605 171.417 145.592 172.508L142.34 433.677C142.326 434.777 143.206 435.678 144.306 435.693ZM158.091 433.742C158.105 434.833 158.993 435.708 160.082 435.708H160.107C161.207 435.694 162.087 434.791 162.073 433.691L158.821 172.508C158.807 171.417 157.918 170.542 156.83 170.542H156.805C155.705 170.555 154.825 171.458 154.839 172.557L158.091 433.742Z"/><path fill-rule="evenodd" clip-rule="evenodd" d="M25.4868 155.131C25.4868 155.68 25.9328 156.126 26.4828 156.126C27.0318 156.126 27.4778 155.68 27.4788 155.131C27.4788 88.3409 79.6738 33.2429 146.306 29.6939C146.855 29.6649 147.276 29.1959 147.247 28.6469C147.218 28.0969 146.749 27.6769 146.2 27.7049C78.5098 31.3109 25.4868 87.2829 25.4868 155.131ZM267.501 209.447C267.637 209.51 267.78 209.541 267.921 209.541C268.296 209.541 268.655 209.328 268.823 208.965C276.705 192.049 280.701 173.937 280.701 155.13C280.701 132.408 274.654 110.099 263.215 90.6137C252.11 71.7007 236.227 55.8647 217.282 44.8167C216.806 44.5397 216.198 44.7007 215.921 45.1757C215.644 45.6507 215.804 46.2597 216.279 46.5367C254.788 68.9927 278.711 110.603 278.711 155.13C278.711 173.644 274.777 191.474 267.019 208.124C266.787 208.622 267.003 209.215 267.501 209.447ZM249.95 190.809C249.839 190.809 249.726 190.791 249.615 190.751C249.097 190.565 248.828 189.996 249.013 189.478C252.952 178.479 254.949 166.923 254.949 155.131C254.949 122.924 239.456 92.2638 213.505 73.1168C213.063 72.7908 212.969 72.1668 213.295 71.7248C213.622 71.2818 214.245 71.1878 214.688 71.5148C227.505 80.9728 238.134 93.4348 245.424 107.553C253.066 122.353 256.94 138.36 256.94 155.131C256.94 167.153 254.904 178.934 250.888 190.149C250.742 190.556 250.359 190.809 249.95 190.809ZM76.6115 223.369C76.5234 223.447 76.4536 223.538 76.4007 223.636C76.2056 223.995 76.2453 224.452 76.5333 224.775C84.4743 233.654 93.8572 241.064 104.423 246.799C119.163 254.799 135.079 259.03 151.732 259.374C167.618 259.701 183.641 256.304 198.068 249.552C198.566 249.318 198.781 248.726 198.548 248.227C198.315 247.73 197.721 247.515 197.224 247.748C168.016 261.422 133.679 260.413 105.373 245.049C95.0091 239.424 85.8053 232.156 78.0175 223.447C77.6505 223.037 77.0221 223.002 76.6115 223.369ZM51.6476 230.17C51.5274 230.26 51.4319 230.371 51.3647 230.495C51.1858 230.824 51.2017 231.241 51.4406 231.562C62.5479 246.559 76.5601 258.711 93.0893 267.683C113.059 278.522 135.551 283.849 158.133 283.091C180.053 282.353 201.547 275.948 220.295 264.567C220.765 264.281 220.914 263.67 220.628 263.2C220.343 262.73 219.732 262.58 219.262 262.865C181.155 285.998 133.173 287.174 94.0386 265.934C77.7669 257.102 63.973 245.139 53.0403 230.378C52.7133 229.936 52.0891 229.843 51.6476 230.17ZM51.7356 138.576C51.6796 138.576 51.6226 138.571 51.5656 138.562C51.0236 138.468 50.6596 137.954 50.7536 137.412C57.6566 97.26 87.6225 64.741 127.097 54.566C127.628 54.427 128.172 54.749 128.309 55.282C128.447 55.814 128.126 56.357 127.593 56.494C88.8776 66.474 59.4855 98.369 52.7155 137.75C52.6325 138.234 52.2106 138.576 51.7356 138.576Z"/><path fill-rule="evenodd" clip-rule="evenodd" d="M149.859 134.354C149.359 134.501 148.848 134.444 148.415 134.23C147.934 133.993 147.549 133.563 147.386 133.008C146.094 128.629 144.828 122.167 146.136 116.245C150.285 97.4754 189.928 5.13241 191.614 1.21081C192.027 0.248711 193.115 -0.228695 194.103 0.118305C195.095 0.466905 195.64 1.51851 195.361 2.52761L159.279 132.983C158.986 134.042 157.889 134.664 156.829 134.37C155.771 134.078 155.148 132.981 155.441 131.921L183.42 30.7654C170.922 60.5804 152.677 105.106 150.025 117.104C148.899 122.198 150.046 127.951 151.205 131.881C151.516 132.936 150.913 134.042 149.859 134.354ZM144.795 137.937C143.269 138.872 141.9 140.072 140.743 141.507C138.095 144.794 136.885 148.914 137.337 153.11C138.268 161.772 146.074 168.061 154.735 167.13C158.932 166.679 162.701 164.619 165.349 161.334C167.997 158.047 169.207 153.926 168.755 149.73C168.304 145.534 166.246 141.765 162.96 139.117C159.673 136.469 155.553 135.26 151.356 135.711C148.993 135.965 146.764 136.73 144.795 137.937ZM159.218 161.506C157.745 162.409 156.079 162.981 154.311 163.17C147.832 163.868 141.993 159.163 141.296 152.684C140.959 149.545 141.864 146.463 143.844 144.005C145.825 141.547 148.645 140.007 151.782 139.67C154.921 139.332 158.004 140.237 160.461 142.218C162.919 144.198 164.459 147.018 164.796 150.156C165.134 153.295 164.229 156.377 162.249 158.835C161.384 159.908 160.359 160.806 159.218 161.506ZM145.048 152.281C144.706 149.092 146.285 146.131 148.854 144.556C149.837 143.953 150.966 143.554 152.186 143.422C156.596 142.948 160.57 146.15 161.045 150.56C161.518 154.97 158.317 158.944 153.907 159.419C149.496 159.893 145.523 156.691 145.048 152.281ZM153.481 155.459C154.097 155.393 154.667 155.191 155.163 154.887C156.461 154.092 157.259 152.596 157.086 150.986C156.846 148.759 154.839 147.142 152.612 147.381C150.386 147.621 148.769 149.628 149.007 151.855C149.247 154.082 151.254 155.699 153.481 155.459ZM170.698 155.433C170.316 155.729 170.04 156.163 169.954 156.677C169.771 157.761 170.502 158.788 171.586 158.97C175.627 159.651 181.3 161.142 185.385 164.387C195.007 172.03 227.029 207.947 248.349 232.248L169.694 162.76C168.869 162.032 167.609 162.112 166.884 162.934C166.156 163.758 166.233 165.017 167.057 165.745L268.495 255.36C269.28 256.053 270.464 256.023 271.212 255.285C271.957 254.549 272.005 253.362 271.322 252.568C268.536 249.334 202.914 173.225 187.862 161.268C183.113 157.497 176.75 155.802 172.247 155.044C171.677 154.947 171.122 155.105 170.698 155.433ZM139.448 164.501C139.424 164.019 139.226 163.545 138.854 163.179C138.07 162.409 136.81 162.419 136.039 163.203C133.167 166.125 128.694 169.921 123.695 171.411C111.918 174.918 64.1345 180.59 32.0025 184.142L134.017 159.481C135.086 159.222 135.742 158.144 135.484 157.078C135.227 156.009 134.15 155.352 133.081 155.61L1.5175 187.415C0.5005 187.661 -0.153504 188.649 0.0234964 189.685C0.199496 190.717 1.1455 191.437 2.1875 191.331C6.4335 190.9 106.409 180.714 124.832 175.227C130.644 173.495 135.678 169.251 138.879 165.995C139.285 165.582 139.474 165.037 139.448 164.501Z"/></svg>';
      }),
      window.addEventListener("load", () => {
        anime({
          targets: e,
          opacity: 0,
          delay: 500,
          duration: 400,
          easing: "linear",
          complete: function () {
            e.remove();
          },
        });
      }));
  }
})();
